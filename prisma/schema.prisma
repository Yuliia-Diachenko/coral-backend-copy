generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  firstName   String?
  lastName    String?
  role        Role     @default(PROVIDER)
  createdAt   DateTime @default(now())

  phone       String?
  dateOfBirth DateTime?
  gender      String?
  discount    Int?

  inviteOption InviteOption @default(INVITE) 
  notifications       Notification[]
  passwordResetTokens PasswordResetToken[]
}


enum InviteOption {
  INVITE
  NO_EMAIL
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Notification {
  id        String           @id @default(uuid())
  message   String
  read      Boolean          @default(false)
  type      NotificationType @default(GENERAL)
  userId    String
  createdAt DateTime         @default(now())
  user      User             @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id            String     @id @default(cuid())
  name          String
  brand         String
  price         Decimal    @db.Decimal(10, 2)
  discountPrice Decimal?   @db.Decimal(10, 2)
  imageUrl      String?
  description   String?
  isActive      Boolean    @default(true)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  quantities    Quantity[]
}

model Quantity {
  id        String  @id @default(cuid())
  label     String
  value     Int
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  ADMIN
  PROVIDER
  PATIENT
}

enum NotificationType {
  GENERAL
  INFO
  WARNING
  ERROR
}

// update file

